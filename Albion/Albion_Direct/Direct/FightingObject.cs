////////////////////////////////////////////////////////////////////////////////////
// Merlin API for Albion Online v1.10.351.109781-prod
////////////////////////////////////////////////////////////////////////////////////
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;

using UnityEngine;

using Albion.Common.Time;

namespace Albion_Direct
{
    /* Internal type: av1 */
    public partial class FightingObject : MovingObject
    {
        private static List<MethodInfo> _methodReflectionPool = new List<MethodInfo>();
        private static List<PropertyInfo> _propertyReflectionPool = new List<PropertyInfo>();
        private static List<FieldInfo> _fieldReflectionPool = new List<FieldInfo>();
        
        private av1 _internal;
        
        #region Properties
        
        public av1 FightingObject_Internal => _internal;
        
        #endregion
        
        #region Fields
        
        
        #endregion
        
        #region Methods
        
        public FightingAttributes GetAttributes() => _internal.at();
        public ObservableRange<afu> GetEnergy() => _internal.xs();
        public ObservableRange<afu> GetHealth() => _internal.xr();
        public CharacterDescriptor GetCharacterDescriptor() => _internal.x0();
        public bool GetIsAttacking() => _internal.zp();
        public bool GetIsCasting() => _internal.zk();
        public bool GetIsDead() => _internal.ji();
        public bool GetIsChanneling() => _internal.zl();
        public bool GetIsIdle() => _internal.zj();
        public float GetLoad() => _internal.jk();
        public float GetLoadPercentage() => _internal.x3();
        public float GetLoadSpeedFactor() => _internal.x4();
        public float GetMaxLoad() => _internal.x2();
        public string GetName() => _internal.iw();
        public long GetTargetId() => _internal.xx();
        public a GetEventHandler<a>() where a : av2 => (a)_internal.y9<a>();

        #endregion

        #region Constructor

        public FightingObject(av1 instance) : base(instance)
        {
            _internal = instance;
        }
        
        static FightingObject()
        {
            
        }
        
        #endregion
        
        #region Conversion
        
        public static implicit operator av1(FightingObject instance)
        {
            return instance._internal;
        }
        
        public static implicit operator FightingObject(av1 instance)
        {
            return new FightingObject(instance);
        }
        
        public static implicit operator bool(FightingObject instance)
        {
            return instance._internal != null;
        }
        #endregion
    }
}
