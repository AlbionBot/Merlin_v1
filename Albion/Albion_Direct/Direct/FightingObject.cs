////////////////////////////////////////////////////////////////////////////////////
// Merlin API for Albion Online v1.10.357.113485-prod
////////////////////////////////////////////////////////////////////////////////////
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;

using UnityEngine;

using Albion.Common.Time;

namespace Albion_Direct
{
    /* Internal type: axu */
    public partial class FightingObject : MovingObject
    {
        private static List<MethodInfo> _methodReflectionPool = new List<MethodInfo>();
        private static List<PropertyInfo> _propertyReflectionPool = new List<PropertyInfo>();
        private static List<FieldInfo> _fieldReflectionPool = new List<FieldInfo>();
        public a GetEventHandler<a>() where a : axv => (a)_internal.zp<a>();

        private axu _internal;
        
        #region Properties
        
        public axu FightingObject_Internal => _internal;
        
        #endregion
        
        #region Fields
        
        
        #endregion
        
        #region Methods
        
        public FightingAttributes GetAttributes() => _internal.ax();
        public ObservableRange<ahc> GetEnergy() => _internal.x8();
        public ObservableRange<ahc> GetHealth() => _internal.x7();
        public CharacterDescriptor GetCharacterDescriptor() => _internal.yg();
        public bool GetIsAttacking() => _internal.z7();
        public bool GetIsCasting() => _internal.z2();
        public bool GetIsDead() => _internal.j0();
        public bool GetIsChanneling() => _internal.z3();
        public bool GetIsIdle() => _internal.z1();
        public float GetLoad() => _internal.j2();
        public float GetLoadPercentage() => _internal.yj();
        public float GetLoadSpeedFactor() => _internal.yk();
        public float GetMaxLoad() => _internal.yi();
        public string GetName() => _internal.je();
        public long GetTargetId() => _internal.yd();
        
        #endregion
        
        #region Constructor
        
        public FightingObject(axu instance) : base(instance)
        {
            _internal = instance;
        }
        
        static FightingObject()
        {
            
        }
        
        #endregion
        
        #region Conversion
        
        public static implicit operator axu(FightingObject instance)
        {
            return instance._internal;
        }
        
        public static implicit operator FightingObject(axu instance)
        {
            return new FightingObject(instance);
        }
        
        public static implicit operator bool(FightingObject instance)
        {
            return instance._internal != null;
        }
        #endregion
    }
}
